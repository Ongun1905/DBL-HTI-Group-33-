/* Variables */
/* CSS also has variables, which can come in handy for frequently occurring values like colors and paddings. */
/* They can be defined in any block, but it's good practice to declare them in the :root block. */
/* They can be declared by typing `--var-name: #ffffff;` and they can be used by typing `color: var(--var-name)` */
:root {
	--color-black-soft: #363F48; /* softer black */
	--color-black-hard: #2d353c; /* harder black */
	--color-green-light: #65cca9; /* light green */
	--padding-sides: 15%;
}

* {
	margin: 0;
	padding: 0;
	font-family: Calibri, helevitica, sans-serif;
}

body {
	color: black;
	background-color: var(--color-black-soft);
}

/* I try to keep an order in which position is above, then z-index, width,height, floats and display, padding and margins, fonts and colors.*/

/*Menu						************************************************************************************************************************************************/
header {
	position: relative;
	width: 100%;
	height: 80px;

	/* Positioning */
	display: flex;
	justify-content: space-between; /* Puts the two child elements (website name and nav) as far away from eachother as possible. */
	align-items: center; /* Vertical align */
	padding: 0 var(--padding-sides);
	box-sizing: border-box; /* TLDR: Instead of keeping the element's full width and letting the padding overflow, this puts the padding within the element. Try commenting out this line to see what I mean! The header will go "outside of the page" to the right. */
	
	color: white;
	background-color: var(--color-black-soft);
}

/* Website name */
header p {
	color: var(--color-green-light);
	font-size: 30px;
}

header nav {
	position: relative; /* z-index only works if the position is set to anything other than "static", the default */
	z-index: 100; /* Makes sure dropdown menu is seen as a top layer| higher z-index -> higher layer */
}
header nav ul li {
	position: relative;
	float: left; /*makes sure list is next to each under and not below as normally*/
	padding: 0px 5px;
	list-style: none; /*No bullet points in list*/
}
header nav ul li a {
	text-decoration: none; /*No line under link as usual*/
	padding: 5px;
	font-size: 20px;
	color: white;
}
header nav ul li a:hover {
	background-color: var(--color-green-light);
}
header nav ul li ul {
	position: absolute;
	width: 120px;
	display: none;
	margin-top: 5px; 			/*same 5 as padding in 'li a'*/
	padding: 10px 0px 10px 0px;
	background-color: #2d353c;	/*harder black*/
}
header nav ul li:hover ul {
	display: block;
}
header nav ul li ul li:hover {
	background-color: var(--color-green-light);
}
header nav ul li ul li a{
	padding: 0px 70px 0px 0px;
}
header nav ul li ul li a:hover {
	background-color: var(--color-green-light);
}

/* Current page highlighthed in menu */
.current {
	background-color: var(--color-green-light);
}
/*End Menu						************************************************************************************************************************************************/

.container {
	position: relative;
	z-index: 10;
	height: 600px;
	display: flex;
	justify-content: center;
	
	color: #65cca9;
	background-color: var(--color-black-hard);
	/*background-color: #D3D3D3;*/   /*white-ish*/
}
.container .main {
	/*width: 60%;*/
	width: 100%;
	padding: 2rem var(--padding-sides);
}

footer {
	display: flex;
	justify-content: space-between;
	align-items: center;

	padding: 1rem var(--padding-sides);
	/* This shorthand assigns padding as follows: top & bottom: 1rem, left & right: 2rem. */
	/* The unit "rem" is commonly used as it's great for responsivity in webdesign (making a website work on smaller devices as well). It's usually equivalent to 16px. */

	color: var(--color-green-light);
	background-color: var(--color-black-soft);
}
